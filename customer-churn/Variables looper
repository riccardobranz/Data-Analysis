class sklearn.tree.DecisionTreeClassifier(
    criterion=’gini’,
    splitter=’best’,
    max_depth=None,
    min_samples_split=2,
    min_samples_leaf=1,
    min_weight_fraction_leaf=0.0,
    max_features=None,
    random_state=None,
    max_leaf_nodes=None,
    min_impurity_decrease=0.0,
    min_impurity_split=None,
    class_weight=None,
    presort=False
)

{
    'criterion': ['gini','entropy'],
    'splitter': ['best','random'],
    'max_depth': range(2,20),
    'min_samples_split': range(2,20),
    'min_samples_leaf': range(1,10),
}

possibilities={
    'criterion': ['gini','entropy'],
    'splitter': ['best','random'],
    'max_depth': range(2,20),
    'min_samples_split': range(2,20),
    'min_samples_leaf': range(1,10),
}
allVariables = sorted(possibilities)
combinations = it.product(*(my_dict[Name] for Name in allNames))
print(list(combinations))
